/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import type { PropSidebar, PropSidebarItem, PropSidebarItemCategory, PropVersionDoc, PropSidebarBreadcrumbsItem } from '@docusaurus/plugin-content-docs';
export declare const isDocsPluginEnabled: boolean;
/**
 * A null-safe way to access a doc's data by ID in the active version.
 */
export declare function useDocById(id: string): PropVersionDoc;
/**
 * A null-safe way to access a doc's data by ID in the active version.
 */
export declare function useDocById(id: string | undefined): PropVersionDoc | undefined;
/**
 * Pure function, similar to `Array#find`, but works on the sidebar tree.
 */
export declare function findSidebarCategory(sidebar: PropSidebar, predicate: (category: PropSidebarItemCategory) => boolean): PropSidebarItemCategory | undefined;
/**
 * Best effort to assign a link to a sidebar category. If the category doesn't
 * have a link itself, we link to the first sub item with a link.
 */
export declare function findFirstCategoryLink(item: PropSidebarItemCategory): string | undefined;
/**
 * Gets the category associated with the current location. Should only be used
 * on category index pages.
 */
export declare function useCurrentSidebarCategory(): PropSidebarItemCategory;
/**
 * Checks if a sidebar item should be active, based on the active path.
 */
export declare function isActiveSidebarItem(item: PropSidebarItem, activePath: string): boolean;
/**
 * Gets the breadcrumbs of the current doc page, based on its sidebar location.
 * Returns `null` if there's no sidebar or breadcrumbs are disabled.
 */
export declare function useSidebarBreadcrumbs(): PropSidebarBreadcrumbsItem[] | null;
//# sourceMappingURL=docsUtils.d.ts.map